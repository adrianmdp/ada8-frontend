{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { usersApi } from \"../../api\";\nimport { UsersContext } from \"../../contexts\";\n\nconst useUsers = () => {\n  _s();\n\n  const {\n    updateUsers\n  } = useContext(UsersContext);\n\n  const addUser = async datos => {\n    await usersApi.addUser(datos);\n    getUsers();\n  };\n\n  const getUsers = async () => {\n    const response = await usersApi.getUsers();\n    updateUsers(response);\n  };\n\n  const getUser = id => {};\n\n  return {\n    addUser,\n    getUsers,\n    getUser,\n    users\n  };\n};\n\n_s(useUsers, \"6hZWkfKJZLgocbnlrRn1JXwSYNE=\");\n\nexport { useUsers };","map":{"version":3,"sources":["/Users/adriansolimano/Documents/ada/repaso/src/hooks/useUsers/index.ts"],"names":["useContext","usersApi","UsersContext","useUsers","updateUsers","addUser","datos","getUsers","response","getUser","id","users"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,UAAU,CAACE,YAAD,CAAlC;;AAEA,QAAMG,OAAO,GAAG,MAAOC,KAAP,IAA8B;AAC5C,UAAML,QAAQ,CAACI,OAAT,CAAiBC,KAAjB,CAAN;AACAC,IAAAA,QAAQ;AACT,GAHD;;AAKA,QAAMA,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACM,QAAT,EAAvB;AACAH,IAAAA,WAAW,CAACI,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAIC,EAAD,IAAgB,CAAE,CAAlC;;AAEA,SAAO;AAAEL,IAAAA,OAAF;AAAWE,IAAAA,QAAX;AAAqBE,IAAAA,OAArB;AAA8BE,IAAAA;AAA9B,GAAP;AACD,CAhBD;;GAAMR,Q;;AAkBN,SAASA,QAAT","sourcesContent":["import { useContext } from \"react\";\nimport { usersApi } from \"../../api\";\nimport { UsersContext } from \"../../contexts\";\nimport { AddUserType, User } from \"../../types/models\";\n\nconst useUsers = () => {\n  const { updateUsers } = useContext(UsersContext);\n\n  const addUser = async (datos: AddUserType) => {\n    await usersApi.addUser(datos);\n    getUsers();\n  };\n\n  const getUsers = async () => {\n    const response = await usersApi.getUsers();\n    updateUsers(response);\n  };\n\n  const getUser = (id: string) => {};\n\n  return { addUser, getUsers, getUser, users };\n};\n\nexport { useUsers };\n"]},"metadata":{},"sourceType":"module"}