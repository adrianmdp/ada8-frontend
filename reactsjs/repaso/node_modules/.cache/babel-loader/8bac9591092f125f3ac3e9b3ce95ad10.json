{"ast":null,"code":"var _jsxFileName = \"/Users/adriansolimano/Documents/ada/repaso/src/contexts/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersContext = /*#__PURE__*/createContext({\n  users: undefined,\n  updateUsers: () => {}\n});\n\nconst UsersProvider = ({\n  children\n}) => {\n  _s();\n\n  const [users, setUsers] = useState();\n\n  const updateUsers = users => {\n    setUsers(users);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: {\n      users,\n      updateUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersProvider, \"843VOBV+vPhEQh0TUziUGM90u0o=\");\n\n_c = UsersProvider;\nexport { UsersContext, UsersProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"sources":["/Users/adriansolimano/Documents/ada/repaso/src/contexts/index.tsx"],"names":["createContext","useState","UsersContext","users","undefined","updateUsers","UsersProvider","children","setUsers"],"mappings":";;;AAAA,SAASA,aAAT,EAAsDC,QAAtD,QAAsE,OAAtE;;AAQA,MAAMC,YAAY,gBAAGF,aAAa,CAAU;AAC1CG,EAAAA,KAAK,EAAEC,SADmC;AAE1CC,EAAAA,WAAW,EAAE,MAAM,CAAE;AAFqB,CAAV,CAAlC;;AAKA,MAAMC,aAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC1C,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBP,QAAQ,EAAlC;;AAEA,QAAMI,WAAW,GAAIF,KAAD,IAAmB;AACrCK,IAAAA,QAAQ,CAACL,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAA9B;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;GAAMD,a;;KAAAA,a;AAcN,SAASJ,YAAT,EAAuBI,aAAvB","sourcesContent":["import { createContext, Dispatch, FC, SetStateAction, useState } from \"react\";\nimport { User } from \"../types\";\n\ntype Context = {\n  users?: User[];\n  updateUsers: (users: User[]) => void;\n};\n\nconst UsersContext = createContext<Context>({\n  users: undefined,\n  updateUsers: () => {},\n});\n\nconst UsersProvider: FC = ({ children }) => {\n  const [users, setUsers] = useState<User[]>();\n\n  const updateUsers = (users: User[]) => {\n    setUsers(users);\n  };\n\n  return (\n    <UsersContext.Provider value={{ users, updateUsers }}>\n      {children}\n    </UsersContext.Provider>\n  );\n};\n\nexport { UsersContext, UsersProvider };\n"]},"metadata":{},"sourceType":"module"}