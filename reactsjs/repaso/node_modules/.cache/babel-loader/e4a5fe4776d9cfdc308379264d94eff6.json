{"ast":null,"code":"var _jsxFileName = \"/Users/adriansolimano/Documents/ada/repaso/src/components/forms/AddUsers/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { defaultValues } from \"./defaultValues\";\nimport { validationSchema } from \"./validationschema\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useUsers } from \"../../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUsers = () => {\n  _s();\n\n  var _formState$errors$ema, _formState$errors$pas, _formState$errors$nam;\n\n  const {\n    addUser,\n    getUsers,\n    users\n  } = useUsers();\n  const {\n    handleSubmit,\n    register,\n    formState\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    addUser(data);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        ...register(\"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: (_formState$errors$ema = formState.errors.email) === null || _formState$errors$ema === void 0 ? void 0 : _formState$errors$ema.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: (_formState$errors$pas = formState.errors.password) === null || _formState$errors$pas === void 0 ? void 0 : _formState$errors$pas.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"name\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: (_formState$errors$nam = formState.errors.name) === null || _formState$errors$nam === void 0 ? void 0 : _formState$errors$nam.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), JSON.stringify(users)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUsers, \"pCW6eWwtEtrmr1RKBgBcOnT5TnA=\", false, function () {\n  return [useUsers, useForm];\n});\n\n_c = AddUsers;\nexport { AddUsers };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"sources":["/Users/adriansolimano/Documents/ada/repaso/src/components/forms/AddUsers/index.tsx"],"names":["useEffect","useForm","defaultValues","validationSchema","yupResolver","useUsers","AddUsers","addUser","getUsers","users","handleSubmit","register","formState","resolver","onSubmit","data","errors","email","message","password","name","JSON","stringify"],"mappings":";;;AAAA,SAAaA,SAAb,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAGA,MAAMC,QAAY,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BJ,QAAQ,EAA7C;AAEA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAwCX,OAAO,CAAC;AACpDC,IAAAA,aADoD;AAEpDW,IAAAA,QAAQ,EAAET,WAAW,CAACD,gBAAD;AAF+B,GAAD,CAArD;;AAKA,QAAMW,QAAQ,GAAIC,IAAD,IAAuB;AACtCR,IAAAA,OAAO,CAACQ,IAAD,CAAP;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEE,YAAY,CAACI,QAAD,CAAtC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,WAAwBH,QAAQ,CAAC,OAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,2CAA+BC,SAAS,CAACI,MAAV,CAAiBC,KAAhD,0DAA+B,sBAAwBC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,WAA2BP,QAAQ,CAAC,UAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,2CACGC,SAAS,CAACI,MAAV,CAAiBG,QADpB,0DACG,sBAA2BD;AAD9B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAeE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBP,QAAQ,CAAC,MAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,2CAA+BC,SAAS,CAACI,MAAV,CAAiBI,IAAhD,0DAA+B,sBAAuBF;AAAtD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAoBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAsBE;AAAA;AAAA;AAAA;AAAA,YAtBF,EAwBGG,IAAI,CAACC,SAAL,CAAeb,KAAf,CAxBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA5CD;;GAAMH,Q;UACiCD,Q,EAESJ,O;;;KAH1CK,Q;AA8CN,SAASA,QAAT","sourcesContent":["import { FC, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { defaultValues } from \"./defaultValues\";\nimport { validationSchema } from \"./validationschema\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useUsers } from \"../../../hooks\";\nimport { AddUserType } from \"../../../types/models\";\n\nconst AddUsers: FC = () => {\n  const { addUser, getUsers, users } = useUsers();\n\n  const { handleSubmit, register, formState } = useForm({\n    defaultValues,\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = (data: AddUserType) => {\n    addUser(data);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group\">\n        <label htmlFor=\"\">email</label>\n        <input type=\"email\" {...register(\"email\")} />\n        <span className=\"text-danger\">{formState.errors.email?.message}</span>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"\">password</label>\n        <input type=\"password\" {...register(\"password\")} />\n        <span className=\"text-danger\">\n          {formState.errors.password?.message}\n        </span>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"\">nombre</label>\n        <input type=\"text\" {...register(\"name\")} />\n        <span className=\"text-danger\">{formState.errors.name?.message}</span>\n      </div>\n      <button type=\"submit\">Enviar</button>\n\n      <hr />\n\n      {JSON.stringify(users)}\n    </form>\n  );\n};\n\nexport { AddUsers };\n"]},"metadata":{},"sourceType":"module"}